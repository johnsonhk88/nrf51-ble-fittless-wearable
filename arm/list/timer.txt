; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\timer.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\timer.d --feedback=.\obj\ak2_v1_1_0.fed --cpu=Cortex-M0 --apcs=interwork -O3 --diag_suppress=9931 -I..\Include -I..\user -I..\Include\app_common -I..\Include\ble -I..\Include\ble\ble_services -I..\Include\s110 -I..\Include\boards -I..\Include\sd_common -IC:\Johnson_project\2016_Project\BLE_Pedometer\Fittless_wearable\firmware_design\git-project\arm\RTE -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.6.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DNRF51 -DNRF51 -DDEBUG_NRF_USER -DSETUPA -DBOARD_AKII -DBLE_STACK_SUPPORT_REQD --omf_browse=.\obj\timer.crf ..\user\timer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Timer2_init PROC
;;;39     
;;;40     void Timer2_init(void)
000000  b510              PUSH     {r4,lr}
;;;41     {
;;;42     	// Set timer2 in timer mode
;;;43       NRF_TIMER2->MODE = TIMER_MODE_MODE_Timer;
000002  4839              LDR      r0,|L1.232|
000004  2100              MOVS     r1,#0
000006  6041              STR      r1,[r0,#4]
;;;44     	NRF_TIMER2->PRESCALER = 9;  // Timer frequency = HFCLK/2^prescaler = 16M/2^9 = 31250hz (32us)
000008  2209              MOVS     r2,#9
00000a  6102              STR      r2,[r0,#0x10]
;;;45       NRF_TIMER2->BITMODE = TIMER_BITMODE_BITMODE_16Bit;
00000c  6081              STR      r1,[r0,#8]
;;;46       NRF_TIMER2->CC[0]       = (31U);  //=32us*31=0.000992s
00000e  4936              LDR      r1,|L1.232|
000010  201f              MOVS     r0,#0x1f
000012  3140              ADDS     r1,r1,#0x40
000014  6008              STR      r0,[r1,#0]
;;;47       
;;;48     	// set Compare[0]  interrupt enable
;;;49       NRF_TIMER2->INTENSET= (TIMER_INTENSET_COMPARE0_Enabled << TIMER_INTENSET_COMPARE0_Pos);	
000016  2001              MOVS     r0,#1
000018  4934              LDR      r1,|L1.236|
00001a  0400              LSLS     r0,r0,#16
00001c  6048              STR      r0,[r1,#4]
;;;50     	// clear compare0 event 
;;;51     	NRF_TIMER2->SHORTS      = (TIMER_SHORTS_COMPARE0_CLEAR_Enabled << TIMER_SHORTS_COMPARE0_CLEAR_Pos);
00001e  4834              LDR      r0,|L1.240|
000020  2101              MOVS     r1,#1
000022  6001              STR      r1,[r0,#0]
000024  1502              ASRS     r2,r0,#20
000026  4833              LDR      r0,|L1.244|
000028  6002              STR      r2,[r0,#0]
00002a  4b33              LDR      r3,|L1.248|
00002c  6818              LDR      r0,[r3,#0]
00002e  24ff              MOVS     r4,#0xff
000030  0424              LSLS     r4,r4,#16
000032  43a0              BICS     r0,r0,r4
000034  2403              MOVS     r4,#3
000036  05a4              LSLS     r4,r4,#22
000038  4320              ORRS     r0,r0,r4
00003a  6018              STR      r0,[r3,#0]
00003c  482f              LDR      r0,|L1.252|
00003e  6002              STR      r2,[r0,#0]
;;;52       
;;;53     	// Set Timer2 interrupt 
;;;54     		NVIC_ClearPendingIRQ(TIMER2_IRQn);
;;;55         NVIC_SetPriority(TIMER2_IRQn,3);
;;;56     		NVIC_EnableIRQ(TIMER2_IRQn);  
;;;57     	  NRF_TIMER2->TASKS_START = 1; //开启定时器
000040  482f              LDR      r0,|L1.256|
000042  6001              STR      r1,[r0,#0]
;;;58     }	
000044  bd10              POP      {r4,pc}
;;;59     
                          ENDP

                  Timer2_handling PROC
;;;76     
;;;77     void Timer2_handling(void)
000046  b570              PUSH     {r4-r6,lr}
;;;78     {
;;;79     	uint32_t err_code;
;;;80     	// System Running LED
;;;81     	LED_Sys_Cnt++;
000048  4c2e              LDR      r4,|L1.260|
;;;82     	if(LED_Sys_Cnt>LED_Blink_Timing)
00004a  2119              MOVS     r1,#0x19
00004c  6820              LDR      r0,[r4,#0]            ;81  ; LED_Sys_Cnt
00004e  0149              LSLS     r1,r1,#5
000050  1c40              ADDS     r0,r0,#1              ;81
000052  2500              MOVS     r5,#0
000054  6020              STR      r0,[r4,#0]  ; LED_Sys_Cnt
000056  4288              CMP      r0,r1
000058  d906              BLS      |L1.104|
00005a  482b              LDR      r0,|L1.264|
00005c  6025              STR      r5,[r4,#0]            ;78  ; LED_Sys_Cnt
00005e  6841              LDR      r1,[r0,#4]            ;78
000060  2201              MOVS     r2,#1                 ;78
000062  0552              LSLS     r2,r2,#21             ;78
000064  4051              EORS     r1,r1,r2              ;78
000066  6041              STR      r1,[r0,#4]            ;78
                  |L1.104|
;;;83       {
;;;84     	 LED_Sys_Cnt=0;	
;;;85     	 nrf_gpio_pin_toggle(Sys_LED);
;;;86     	}	
;;;87     
;;;88     	#if Heart_Rate_Func
;;;89        if(HRM_Update==1)
000068  4e28              LDR      r6,|L1.268|
00006a  7830              LDRB     r0,[r6,#0]  ; HRM_Update
00006c  2801              CMP      r0,#1
00006e  d102              BNE      |L1.118|
;;;90     	 {
;;;91     		adc_Heart_Signal_Process();
000070  f7fffffe          BL       adc_Heart_Signal_Process
;;;92         HRM_Update=0;
000074  7035              STRB     r5,[r6,#0]
                  |L1.118|
;;;93     	 }		 
;;;94     	if((HRM_Run==1))
000076  4826              LDR      r0,|L1.272|
000078  7800              LDRB     r0,[r0,#0]  ; HRM_Run
00007a  2801              CMP      r0,#1
00007c  d101              BNE      |L1.130|
;;;95     	{
;;;96        adc_start();
00007e  f7fffffe          BL       adc_start
                  |L1.130|
;;;97     	}	
;;;98        	
;;;99     	#endif
;;;100    	
;;;101    	//system 1second timing
;;;102    	Timeout_1sec_Cnt++;
000082  6860              LDR      r0,[r4,#4]  ; Timeout_1sec_Cnt
;;;103    	if(Timeout_1sec_Cnt>Timing_1sec)
000084  217d              MOVS     r1,#0x7d
000086  1c40              ADDS     r0,r0,#1              ;102
000088  00c9              LSLS     r1,r1,#3
00008a  6060              STR      r0,[r4,#4]  ; Timeout_1sec_Cnt
00008c  4288              CMP      r0,r1
00008e  d91a              BLS      |L1.198|
;;;104    	{
;;;105        Timeout_1sec_Cnt=0;
;;;106    	 
;;;107     		// other 1 second function
;;;108    		
;;;109    		#if  BLE_UART
;;;110    		// 
;;;111    		BT_TR_time_count++;                                        //记时
000090  6065              STR      r5,[r4,#4]  ; Timeout_1sec_Cnt
000092  4c20              LDR      r4,|L1.276|
000094  7820              LDRB     r0,[r4,#0]  ; BT_TR_time_count
000096  1c40              ADDS     r0,r0,#1
000098  7020              STRB     r0,[r4,#0]
;;;112     if((BT_TR_time_count==BT_TR_TIME)||(change_state==1))      //定时向APP上传状态值
00009a  7820              LDRB     r0,[r4,#0]  ; BT_TR_time_count
00009c  4e1e              LDR      r6,|L1.280|
00009e  283c              CMP      r0,#0x3c
0000a0  d002              BEQ      |L1.168|
0000a2  7830              LDRB     r0,[r6,#0]  ; change_state
0000a4  2801              CMP      r0,#1
0000a6  d10e              BNE      |L1.198|
                  |L1.168|
;;;113     {
;;;114       err_code = ble_nus_send_string(&m_nus, states, 8 );      //上传数据
0000a8  2208              MOVS     r2,#8
0000aa  491c              LDR      r1,|L1.284|
0000ac  481c              LDR      r0,|L1.288|
0000ae  f7fffffe          BL       ble_nus_send_string
;;;115       if (err_code != NRF_ERROR_INVALID_STATE)
0000b2  2808              CMP      r0,#8
0000b4  d005              BEQ      |L1.194|
;;;116       {
;;;117       APP_ERROR_CHECK(err_code);
0000b6  2800              CMP      r0,#0
0000b8  d003              BEQ      |L1.194|
0000ba  a21a              ADR      r2,|L1.292|
0000bc  2175              MOVS     r1,#0x75
0000be  f7fffffe          BL       app_error_handler
                  |L1.194|
;;;118       }
;;;119       BT_TR_time_count=0;
0000c2  7025              STRB     r5,[r4,#0]
;;;120    	 change_state=0;
0000c4  7035              STRB     r5,[r6,#0]
                  |L1.198|
;;;121     } 
;;;122    		
;;;123    		
;;;124    		#endif
;;;125    		
;;;126    		
;;;127    		
;;;128    	}		
;;;129    
;;;130    }	
0000c6  bd70              POP      {r4-r6,pc}
                          ENDP

                  TIMER2_IRQHandler PROC
;;;60     
;;;61     void TIMER2_IRQHandler(void)
0000c8  4809              LDR      r0,|L1.240|
;;;62     {
;;;63        // 
;;;64      	if ((NRF_TIMER2->EVENTS_COMPARE[0] != 0) && ((NRF_TIMER2->INTENSET & TIMER_INTENSET_COMPARE0_Msk) != 0)) 
0000ca  38c0              SUBS     r0,r0,#0xc0
0000cc  6801              LDR      r1,[r0,#0]
0000ce  2900              CMP      r1,#0
0000d0  d009              BEQ      |L1.230|
0000d2  4906              LDR      r1,|L1.236|
0000d4  6849              LDR      r1,[r1,#4]
0000d6  03c9              LSLS     r1,r1,#15
0000d8  d505              BPL      |L1.230|
;;;65        { 
;;;66      		NRF_TIMER2->EVENTS_COMPARE[0] = 0;           //Clear compare register 0 event	 
0000da  2100              MOVS     r1,#0
0000dc  6001              STR      r1,[r0,#0]
;;;67     	//	nrf_gpio_pin_set(GPIO_TOGGLE_PIN);           //Set LED 
;;;68     		NRF_TIMER2->TASKS_CLEAR = 1;  
0000de  4908              LDR      r1,|L1.256|
0000e0  2001              MOVS     r0,#1
0000e2  60c8              STR      r0,[r1,#0xc]
;;;69     		Timer2_handling();
0000e4  e7fe              B        Timer2_handling
                  |L1.230|
;;;70     		
;;;71       } 
;;;72     
;;;73     
;;;74     }	
0000e6  4770              BX       lr
;;;75     
                          ENDP

                  |L1.232|
                          DCD      0x4000a500
                  |L1.236|
                          DCD      0x4000a300
                  |L1.240|
                          DCD      0x4000a200
                  |L1.244|
                          DCD      0xe000e280
                  |L1.248|
                          DCD      0xe000e408
                  |L1.252|
                          DCD      0xe000e100
                  |L1.256|
                          DCD      0x4000a000
                  |L1.260|
                          DCD      ||.data||
                  |L1.264|
                          DCD      0x50000500
                  |L1.268|
                          DCD      HRM_Update
                  |L1.272|
                          DCD      HRM_Run
                  |L1.276|
                          DCD      BT_TR_time_count
                  |L1.280|
                          DCD      change_state
                  |L1.284|
                          DCD      states
                  |L1.288|
                          DCD      m_nus
                  |L1.292|
000124  2e2e5c75          DCB      "..\\user\\timer.c",0
000128  7365725c
00012c  74696d65
000130  722e6300

                          AREA ||.data||, DATA, ALIGN=2

                  LED_Sys_Cnt
                          DCD      0x00000000
                  Timeout_1sec_Cnt
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\user\\timer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_timer_c_0df8af1c____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_timer_c_0df8af1c____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_timer_c_0df8af1c____REVSH|
#line 144
|__asm___7_timer_c_0df8af1c____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
